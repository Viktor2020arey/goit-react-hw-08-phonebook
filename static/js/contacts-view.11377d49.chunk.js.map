{"version":3,"sources":["utils/motionVar.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","views/ContactsView/ContactsView.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["variants","initial","scale","animate","exit","transition","ease","duration","module","exports","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","response","status","alert","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useDispatch","visibleContacts","useSelector","contactsSelectors","length","motion","ul","className","styles","list","AnimatePresence","map","id","li","item","text","IconButton","btn","color","type","onClick","contactsOperations","p","ContactForm","useState","setName","setNumber","handleChange","e","target","value","resetInput","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","label","input","onChange","placeholder","format","mask","pattern","Button","variant","size","LoaderComponent","Filter","contactsActions","filterContact","ContactsView","useEffect","wrapper"],"mappings":"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","file":"static/js/contacts-view.11377d49.chunk.js","sourcesContent":["export const variants = {\n  initial: { scale: 0 },\n  animate: { scale: 1 },\n  exit: { scale: 0 },\n  transition: { ease: \"easeOut\", duration: 0.3 },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2OS-k\",\"item\":\"ContactList_item__l5GrF\",\"btn\":\"ContactList_btn__1BxFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3BFkQ\",\"label\":\"ContactForm_label__39u4f\",\"input\":\"ContactForm_input__23mgj\",\"btn\":\"ContactForm_btn__1sbLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1ehEd\",\"input\":\"Filter_input__2N52X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsView_wrapper__2MyZU\"};","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contacts-actions\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => {\n      dispatch(fetchContactsError(error));\n\n      if (error.response.status === 404) {\n        alert(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        alert(\"Oops! Server error! Please try later!\");\n      } else {\n        alert(\"Something went wrong! Please reload the page!\");\n      }\n    });\n};\n\nexport const addContact = (name, number) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => {\n      dispatch(addContactError(error));\n\n      if (error.response.status === 400) {\n        alert(\"Contact creation error!\");\n      } else {\n        alert(\"Something went wrong! Please reload the page!\");\n      }\n    });\n};\n\nexport const deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => {\n      dispatch(deleteContactError(error));\n\n      if (error.response.status === 404) {\n        alert(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        alert(\"Oops! Server error! Please try later!\");\n      } else {\n        alert(\"Something went wrong! Please reload the page!\");\n      }\n    });\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getLoading = (state) => state.contacts.isLoading;\nexport const getError = (state) => state.contacts.error;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { variants } from \"../../utils/motionVar\";\nimport styles from \"./ContactList.module.css\";\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <motion.ul className={styles.list}>\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                className={styles.item}\n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                variants={variants}\n              >\n                <p className={styles.text}>\n                  {name}: {number}\n                </p>\n                <IconButton\n                  className={styles.btn}\n                  aria-label=\"delete\"\n                  color=\"secondary\"\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            variants={variants}\n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\nimport NumberFormat from \"react-number-format\";\nimport Button from \"@material-ui/core/Button\";\nimport LoaderComponent from \"../LoaderComponent\";\nimport styles from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = (name) => {\n    return contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const checkRepeatNumber = (number) => {\n    return contacts.find((contact) => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === \"\" || number.trim() === \"\";\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      return alert(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      return alert(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      return alert(\"😱 Enter the contact's name and number phone!\");\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <NumberFormat\n          placeholder=\"Enter phone number\"\n          format=\"(###) ###-##-##\"\n          mask=\"_\"\n          pattern=\"^[0-9\\s\\(\\)\\-]{15}\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={styles.input}\n        />\n      </label>\n\n      {!isLoading && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n          className={styles.btn}\n        >\n          Add contact\n        </Button>\n      )}\n\n      {isLoading && <LoaderComponent />}\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { contactsActions, contactsSelectors } from \"../../redux/contacts\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { variants } from \"../../utils/motionVar\";\nimport styles from \"./Filter.module.css\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <AnimatePresence>\n          <label className={styles.label}>\n            <motion.input\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              transition=\"transition\"\n              variants={variants}\n              className={styles.input}\n              type=\"text\"\n              value={filter}\n              onChange={(e) =>\n                dispatch(contactsActions.filterContact(e.target.value))\n              }\n            />\n          </label>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ContactList from \"../../components/ContactList\";\nimport ContactForm from \"../../components/ContactForm\";\nimport Filter from \"../../components/Filter\";\nimport { contactsOperations } from \"../../redux/contacts\";\nimport styles from \"./ContactsView.module.css\";\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={styles.wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}