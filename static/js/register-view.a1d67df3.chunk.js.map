{"version":3,"sources":["views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["module","exports","RegisterView","dispatch","useDispatch","isLoading","useSelector","authSelectors","getLoading","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","target","value","onSubmit","preventDefault","trim","alert","length","authOperations","register","className","styles","form","autoComplete","TextField","label","variant","color","type","onChange","textField","Button","size","LoaderComponent"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,kC,sKCOjD,SAASC,IACtB,IAAMC,EAAWC,cACXC,EAAYC,YAAYC,IAAcC,YAC5C,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACH,OAAOC,EAAQQ,GACjB,IAAK,QACH,OAAON,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAiBN,OACE,uBAAMC,SAda,SAACH,GAEpB,OADAA,EAAEI,iBACkB,KAAhBX,EAAKY,QAAkC,KAAjBV,EAAMU,QAAqC,KAApBR,EAASQ,OACjDC,MAAM,2CACJT,EAASU,OAAS,EACpBD,MAAM,kDAEfpB,EAASsB,IAAeC,SAAS,CAAEhB,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,SACTE,EAAY,MAIkBY,UAAWC,IAAOC,KAAMC,aAAa,MAAnE,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,OACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,OACLzB,KAAK,OACLS,MAAOT,EACP0B,SAAUpB,EACVW,UAAWC,IAAOS,YAGpB,cAACN,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACLzB,KAAK,QACLS,MAAOP,EACPwB,SAAUpB,EACVW,UAAWC,IAAOS,YAGpB,cAACN,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,WACLzB,KAAK,WACLS,MAAOL,EACPsB,SAAUpB,EACVW,UAAWC,IAAOS,aAGlBhC,GACA,cAACiC,EAAA,EAAD,CACEL,QAAQ,YACRC,MAAM,YACNK,KAAK,QACLJ,KAAK,SAJP,qBAUD9B,GAAa,cAACmC,EAAA,EAAD","file":"static/js/register-view.a1d67df3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__3dNmu\",\"textField\":\"RegisterView_textField__2Ph9j\"};","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authOperations, authSelectors } from \"../../redux/auth\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport LoaderComponent from \"../../components/LoaderComponent\";\nimport styles from \"./RegisterView.module.css\";\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(authSelectors.getLoading);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === \"\" || email.trim() === \"\" || password.trim() === \"\") {\n      return alert(\"ðŸ’© Please fill in all fields!\");\n    } else if (password.length < 7) {\n      return alert(\"Passwords must be at least 7 characters long!\");\n    }\n    dispatch(authOperations.register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        className={styles.textField}\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        className={styles.textField}\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        className={styles.textField}\n      />\n\n      {!isLoading && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Sign up\n        </Button>\n      )}\n\n      {isLoading && <LoaderComponent />}\n    </form>\n  );\n}\n"],"sourceRoot":""}